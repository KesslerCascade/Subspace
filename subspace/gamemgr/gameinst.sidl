#include "subspace.h"
#include "process.h"
#include "proto.h"

class GameMgr;
class ControlClient;

typedef enum GameInstState {
    GI_Init = GAME_INIT,
    GI_Loading = GAME_LOADING,
    GI_Menu = GAME_MENU,
    GI_Run = GAME_RUN,
    GI_Practice = GAME_PRACTICE,
    GI_Launching,
    GI_Failed,
    GI_Exited
} GameInstState;

[methodprefix ginst] class GameInst
{
    Subspace *ss;
    weak:GameMgr mgr;

    uint32 cookie;      // unique cookie for game comms
    weak:ControlClient client;
    ProcessHandle process;

    RWLock lock;

    string exepath;
    LaunchMode mode;
    GameInstState state;

    float loadPct;
    int failReason;
    [sorted] sarray:string availFeatures;

    factory create(GameMgr *mgr, strref exepath, LaunchMode mode);
    factory createForClient(GameMgr *mgr, ControlClient *client, uint32 cookie); // for dev mode clients
    bool launch();
    void setState(GameInstState state);
    void setStateLocked(GameInstState state);
}